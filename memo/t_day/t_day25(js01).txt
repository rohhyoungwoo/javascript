day25
자바스크립트 -> js환경구축 -> 자바스크립트 기본 문법

0. 복습
	HTML	웹의 구조/내용 작성	=> .html
	CSS	웹 디자인(색상, 정렬, 배치-레이아웃 등) => .css
	Javascript 웹의 동작 구현(이벤트 등) => .js

1. 자바 스크립트
	객체기반의 스크립트 언어
	컴파일 과정이 없이 브라우저 내부의 자바스크립트 처리기(인터프리터)에 의해 바로 실행된다
	※ 개발이 발전됨에 따라 컴파일 과정이 가능해졌으며, Node.js로 서버 환경을 구축한다

	자바스크립트 ----- 인터프리터 ----- 컴퓨터
	웹 브라우저에는 자바스크립트 소스를 읽고 처리하는 해석기가 있으며
	자바스크립트 소스는 웹문서(.html)에서 <script></script> 태그를 이용하여 작성할 수 있다
	소스만 별도 스크립트 파일로 작성 후 웹문서와 연결해서 사용할 수 있다(.js)

1) 자바스크립트 역사
	1995년 넷스케이프사 브렌덴아이크가 개발
	모카 -> 라이브스크립트 -> 자바스크립트

	초창기 자바스크립트는 웹페이지의 보조적인 기능을 수행하기 위해 한정적인 기능으로 사용되었다
	대부분의 로직은 주로 웹 서버에서 실행되고 브라우저는 전달받은 html과 css를 단순히 렌더링 하는 수준으로 사용했다
	지금은 자바스크립트를 이용하여 웹서버까지 만들수가 있다(node.js 이용)
	* 렌더링 : (1) html, css, 자바스크립트로 작성된 문서를 해석하여 브라우저에서 시각적으로 출력하는 것을 의미
		(2) 서버에서 데이터를 HTML로 변환해서 브라우저에게 전달하는 과정(SSR :Server Side Rendering)을
			의미하기도 함

2) 자바스크립트 특징
	퍼즐조각처럼 코드형태로 html 페이지에 내장된다
	컴파일 과정이 없이 브라우저 내부의 자바스크립트 처리기(인터프리터)에 의해 바로 실행

	[index.html]		[웹브라우저]
	<script>
	자바스크립트코드 -> 인터프리터		-> 결과출력
	</script>

3) 자바와 자바스크립트의 차이
	직접적인 관련은 없다
	문법상 비슷한 부분은 C언어를 기반으로 만들어졌기 때문이다

	자바			자바스크립트
	컴파일 언어		인터프리터 언어
	타입검사 엄격하게함		타입을 명시하지 않음(동적바인딩)
	클래스기반의 객체지향언어	프로토타입 기반의 객체지향언어

4) 웹 페이지에서 자바스크립트의 역할
	웹페이지는 3가지(HTML, CSS, JAVASCRIPT) 코드가 결합되어 작성된다
	자바스크립트는 사용자의 입력을 처리하거나 웹 어플리케이션을 작성하는 등 동적 제어에 사용된다

- 사용자의 입력 및 계산
	HTML의 폼은 입력창만 제공하고 KEY, MOUSE 입력과 계산은 오직 자바스크립트로만 처리가 가능하다

- 웹페이지의 내용 및 모양의 동적 제어
	HTML 태그의 속성이나 컨텐츠, CSS 속성값을 변경하여 웹페이지에 동적인 변화를 일으키는데 활용된다

- 브라우저 제어
	브라우저 창의 크기나 모양변경, 다른 웹사이트로 접속 등 브라우저 작동을 제어하는데 활용된다

- 웹서버와의 통신(Ajax)
	웹 페이지가 웹서버와 데이터를 주고받을 때 활용된다
	Ajax : Asynchronous Javascript and XML
	웹페이지에서 비동기적으로 데이터를 주고받는 기술

- 웹 어플리케이션 작성(API)
	자바스크립트 언어로 활용할 수 있는 많은 API를 제공하므로
	웹 브라우저에서 실행되는 다양한 웹 어플리케이션을 개발할 수 있다

2. JS 환경 구축
1) node.js
	크롬 V8 Javascript 엔진으로 빌드된 javascript 런타임
	javascript로 작성된 프로그램을 일반 어플리케이션 프로그램처럼 실행시켜주는 런타임이다

	2009년 라이언 달이 발표
	브라우저에서만 동작하던 자바스크립트를 브라우저 이외의 환경에서 동작시킬 수 있는 자바스크립트 실행환경
	npm(node package manager) : 자바스크립트 패키지 매니저
		node.js에서 사용할 수 있는 모듈들을 패키지화 해서 모아둔 저장소 역할과 패키지 설치 및 관리를 위한
		CLI를 제공함

2) node.js 설치
	구글에서 node.js 검색 > 최상단 링크 클릭 > LTS 버전으로 설치

3) node.js를 사용하는 이유
	javascript는 스크립트 언어
	특정 프로그램 안에서만 동작하기 때문에 웹 브라우저가 없다면 자바스크립트를 사용할 수 없다
	node.js는 자바스크립트를 웹 브라우저에서 독립시켜서 node.js 터미널 프로그램에서 웹 브라우저 없이 자바스크립트를
	실행할 수 있다
	node.js를 통해 javascript라는 하나의 언어로 서버를 만들 수 있다

4) vs code 확장 프로그램
	code runner 설치 후 test.js 파일을 만든 뒤 console.log("안녕"); > ctrl + alt + n(실행단축키)
	아래 콘솔 결과 나오는 것에 한글 깨지면 vs code 열려있는 것 모두 닫고 재시작
	- 그래도 안되면 컴퓨터 재부팅
	
3. 자바스크립트를 작성할 수 있는 위치
1) html 태그의 이벤트 리스너 속성에 작성
	html 태그내에 이벤트가 발생할  때 처리하는 코드를 등록하는 리스너 속성이 있다
	이 속성에 자바스크립트 코드를 작성할 수 있다

2) <script></script> 내에 작성
	<head></head>, <body></body>, body 태그 밖에 등 어디서든 작성할 수 있다
	웹페이지 내에서 여러번 작성도 가능하다
	
3) 자바스크립트 파일에 작성
	.js 확장자를 가진 별도의 파일로 저장하고
	<script src="파일경로"></script>를 통해 불러서 사용할 수 있다

4) url 부분에 작성
	<a>태그 href 속성 등에서 자바스크립트 코드를 작성할 수 있다
	href 속성에서 자바스크립트 코드를 쓸 때는 javascript 라는 키워드를 작성해야한다

4. 자바스크립트의 기본 문법
1) 실행문
	실행문은 ;(세미콜론)으로 구분한다
	대소문자를 구분한다

2) 자바스크립트 식별자(이름)
	식별자(identifier) : 어떤 값을 구별하기 위해 식별할 수 있는 고유한 이름
		
- 식별자 작명규칙
	첫번째 문자 : 알파벳, 언더바(_), $문자만 사용가능
	두번째 이상 문자 : 알파벳, 언더바(_), $문자, 0-9 사용가능
	대소문자 구분 :  data, Data, DaTa 다른 식별자이다
	키워드는 사용 불가

3) 문장 구분
	세미콜론으로 문장과 문장을 구분한다
	한줄에 한 문장만 있는 경우 세미콜론을 생략할 수 있지만 세미콜론을 붙이는 습관을 들이는 것이 좋다
	
	ex)
	i = i + 1
	j = j + 1;
	k = k + 1; m = m + 1;
	k = k + 1 m = m + 1(x)

4) 주석
	단축키 : ctrl + /

	java주석
		한줄주석	//
		범위주석	/* */
		api주석  /** */
	SQL주석	--
	HTML주석	<!-- -->
	CSS주석	/* */
	JS주석
		한줄주석 	//
		범위주석  /* */

5) 데이터 타입
- 원시타입
	숫자타입(number) : 정수, 실수 구분없이 숫자 타입
		ex) 50, -50, -3.14,  4.11, ...
		Infinity(무한), NaN(Not a Number 숫자가 아니어서 연산불가) 특별한 값도 포함된다

		자바 => int, long, dobule, float
		오라클 => number

	논리타입(boolean) : 참, 거짓 값을 나타내는 논리형 타입
		ex) true, false

		자바 => true, false (boolean)
		오라클 => x

	문자열 타입(string) : 문자열을 나타낼 때 "", '', ``(백틱)을 사용한다
		ex) "안녕", '안녕', `안녕`
	
		자바 => String
		오라클 => varchar2, char

	undefined : 타입이 정해지지 않은 것을 의미한다
		ex) undefined 값만 존재한다

	null : 값이 정해지지 않은 값이다, 의도적으로 값이 없음을 의미하는 값
		ex) null 값만 존재한다

	Symbol : 고유하고 변경 불가능한 값을 생성하는 타입, 주로 객체의 속성키로 사용된다

- 객체타입
	자바스크립트는 여러 언어의 영향을 받았다
	명령형, 함수형, 객체 지향형을 지원하는 멀티 패러다임 프로그래밍 언어이다
	자바스크립트를 구성하는 거의 모든 것이 객체이다
	object : 객체타입 키-값 쌍으로 이루어진 구조
	array : 순서가 있는 값들의 목록
	function : 코드블록을 정의하고 호출할 수 있는 객체
		






















